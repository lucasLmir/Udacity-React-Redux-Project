// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App is expected to render the component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        style="direction: ltr;"
      >
        <div
          class=""
          style="width: 0%; transition: width 800ms linear 0s; will-change: width, opacity; height: 3px; background-color: red; position: absolute; opacity: 0;"
        />
        <div
          style="display: table; clear: both;"
        />
      </div>
      <div
        class="container"
      >
        <nav
          class="nav"
        >
          <ul>
            <li>
              <a
                href="/"
              >
                Home
              </a>
            </li>
            <li>
              <a
                href="/new"
              >
                Ask a Question
              </a>
            </li>
            <li>
              <a
                href="/leaderboard"
              >
                Leader Board
              </a>
            </li>
            <li
              class="right"
            >
              <a
                href="/login"
              >
                <span
                  data-testid="userName"
                >
                  Login
                </span>
              </a>
            </li>
            <li>
              <a
                href="/login"
              >
                <img
                  alt="avatar of undefined"
                  class="small-avatar"
                  data-testid="avatarImg"
                  hidden=""
                />
              </a>
            </li>
          </ul>
        </nav>
        <div>
          <button
            data-testid="logout-btn"
            hidden=""
          >
            LogOut
          </button>
          <form
            data-testid="login-form"
          >
            <input
              data-testid="uname-input"
              id="Uname"
              name="Uname"
              placeholder="Username"
              type="text"
              value=""
            />
            <br />
            <input
              data-testid="pass-input"
              id="Pass"
              name="Pass"
              placeholder="Password"
              type="Password"
              value=""
            />
            <br />
            <button
              data-testid="submit-btn"
            >
              LogIn
            </button>
          </form>
          <p
            data-testid="message"
          />
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="direction: ltr;"
    >
      <div
        class=""
        style="width: 0%; transition: width 800ms linear 0s; will-change: width, opacity; height: 3px; background-color: red; position: absolute; opacity: 0;"
      />
      <div
        style="display: table; clear: both;"
      />
    </div>
    <div
      class="container"
    >
      <nav
        class="nav"
      >
        <ul>
          <li>
            <a
              href="/"
            >
              Home
            </a>
          </li>
          <li>
            <a
              href="/new"
            >
              Ask a Question
            </a>
          </li>
          <li>
            <a
              href="/leaderboard"
            >
              Leader Board
            </a>
          </li>
          <li
            class="right"
          >
            <a
              href="/login"
            >
              <span
                data-testid="userName"
              >
                Login
              </span>
            </a>
          </li>
          <li>
            <a
              href="/login"
            >
              <img
                alt="avatar of undefined"
                class="small-avatar"
                data-testid="avatarImg"
                hidden=""
              />
            </a>
          </li>
        </ul>
      </nav>
      <div>
        <button
          data-testid="logout-btn"
          hidden=""
        >
          LogOut
        </button>
        <form
          data-testid="login-form"
        >
          <input
            data-testid="uname-input"
            id="Uname"
            name="Uname"
            placeholder="Username"
            type="text"
            value=""
          />
          <br />
          <input
            data-testid="pass-input"
            id="Pass"
            name="Pass"
            placeholder="Password"
            type="Password"
            value=""
          />
          <br />
          <button
            data-testid="submit-btn"
          >
            LogIn
          </button>
        </form>
        <p
          data-testid="message"
        />
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
